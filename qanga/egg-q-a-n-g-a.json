{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": null
    },
    "exported_at": "2024-11-29T10:28:41+00:00",
    "name": "QANGA",
    "author": "josdekurk@gmail.com",
    "uuid": "7c7a14bb-51a4-4efd-91c5-991cf426a135",
    "description": "QANGA: Dive into a sci-fi adventure of exploration and resilience across the cosmos. Merge your mind with a state-of-the-art cyborg crafted by ICLab's Industry labs, and journey through this expansive universe! ",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "Steamcmd Debian": "ghcr.io\/parkervcp\/steamcmd:debian"
    },
    "file_denylist": [],
    "startup": "\/home\/container\/Qanga\/Binaries\/Linux\/QangaServer-Linux-Shipping Qanga \/Game\/Maps\/Universe\/{{MAP}}? -server -log -port={{SERVER_PORT}} -map={{MAP}} -sessionName=\"{{SESSION_NAME}}\" -QueryPort={{QUERY_PORT}}",
    "config": {
        "files": "{}",
        "startup": "{\n    \"done\": \"Steam Sockets Adress\"\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'ghcr.io\/parkervcp\/installers:debian'\r\n\r\n# Install packages. Default packages below are not required if using our existing install image thus speeding up the install process.\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n## add below your custom commands if needed\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/pelican-eggs\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "sort": 1,
            "name": "App ID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "1652070",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string",
                "in:1652070"
            ]
        },
        {
            "sort": 2,
            "name": "Auto Update",
            "description": "Auto update the server on startup",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "boolean"
            ]
        },
        {
            "sort": 3,
            "name": "Map",
            "description": "The Server Map",
            "env_variable": "MAP",
            "default_value": "L_Persistent_Universe",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ]
        },
        {
            "sort": 4,
            "name": "Session Name",
            "description": "The Name of the Session",
            "env_variable": "SESSION_NAME",
            "default_value": "Survival",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "min:5",
                "max:25"
            ]
        },
        {
            "sort": 5,
            "name": "Query Port",
            "description": "The Query port",
            "env_variable": "QUERY_PORT",
            "default_value": "27016",
            "user_viewable": true,
            "user_editable": false,
            "rules": [
                "required",
                "numeric"
            ]
        }
    ]
}